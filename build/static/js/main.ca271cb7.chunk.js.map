{"version":3,"sources":["ToDoItem.js","Taskbox.js","AddTaskModal.js","Main.js","App.js","index.js"],"names":["ToDoItem","props","state","visible","completed","data","taskId","_id","animationClass","toggleCompletion","bind","removeTask","deleteTaskOnDatabase","this","setState","updateCompletionStatusOnDatabase","completionStatus","fetch","method","headers","body","JSON","stringify","then","response","console","log","setTimeout","className","onClick","taskName","Component","Taskbox","databaseRecords","refreshCounter","performSearch","json","results","map","item","i","key","AddTaskModal","updateInputValue_taskName","event","newTaskName","target","value","visibility","addTaskToDatabase","x","preventDefault","toggleAddTaskModal","onSubmit","autoFocus","type","placeholder","onChange","Main","visible_AddTaskModal","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca271cb7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ToDoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n      completed: this.props.data.completed,\n      taskId: this.props.data._id,\n      animationClass: \"\"\n    };\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.deleteTaskOnDatabase = this.deleteTaskOnDatabase.bind(this);\n  }\n\n  toggleCompletion() {\n    if (this.state.completed) {\n      this.setState({ completed: false });\n      this.updateCompletionStatusOnDatabase(this.props.data._id, false);\n    } else {\n      this.setState({ completed: true });\n      this.updateCompletionStatusOnDatabase(this.props.data._id, true);\n    }\n  }\n\n  updateCompletionStatusOnDatabase(taskId, completionStatus) {\n    return fetch(\"/update\", {\n      method: \"put\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        taskId: taskId,\n        completionStatus: completionStatus\n      })\n    }).then(response => console.log(response));\n  }\n\n  deleteTaskOnDatabase() {\n    return fetch(\"/delete\", {\n      method: \"delete\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        taskId: this.state.taskId\n      })\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  removeTask() {\n    this.setState({ animationClass: \"animated fadeOutRight\" });\n    setTimeout(() => this.deleteTaskOnDatabase(), 500);\n  }\n\n  render() {\n    return (\n      <div className={this.state.animationClass}>\n        <section className=\"card mb-2 p-2 \">\n          <div className=\"row\">\n            <div className=\"col-1 text-left\" onClick={this.toggleCompletion}>\n              {this.state.completed ? (\n                <i className=\"far fa-check-circle fa-lg\"></i>\n              ) : (\n                <i className=\"far fa-circle fa-lg\"></i>\n              )}\n            </div>\n            <div className=\"col-10\">\n              {this.state.completed ? (\n                <strike>{this.props.data.taskName}</strike>\n              ) : (\n                <span>{this.props.data.taskName}</span>\n              )}\n            </div>\n            <div className=\"col-1 text-right\" onClick={this.removeTask}>\n              <i className=\"fas fa-times\"></i>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ToDoItem;\n","import React, { Component } from \"react\";\nimport ToDoItem from \"./ToDoItem.js\";\n\nclass Taskbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      databaseRecords: [],\n      refreshCounter: 0\n    };\n  }\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  componentDidUpdate() {\n    this.performSearch();\n  }\n\n  performSearch() {\n    let url = \"/usertasks\";\n    fetch(url)\n      .then(response => response.json())\n      .then(results => {\n        console.log(results);\n        this.setState({\n          databaseRecords: results\n        });\n      });\n  }\n\n  render() {\n    let stuff = this.state.databaseRecords.map((item, i) => (\n      <ToDoItem key={item._id} data={item} />\n    ));\n    return stuff;\n  }\n}\n\nexport default Taskbox;\n","import React, { Component } from \"react\";\n\nclass AddTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: this.props.visibility,\n      newTaskName: \"\"\n    };\n    this.addTaskToDatabase = this.addTaskToDatabase.bind(this);\n  }\n\n  componentDidUpdate() {\n    let x = this.props.visibility;\n    if (x !== this.state.visible) {\n      this.setState({ visible: x });\n    }\n  }\n\n  addTaskToDatabase(event) {\n    event.preventDefault();\n    return fetch(\"/addtask\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        taskName: this.state.newTaskName\n      })\n    }).then(response => {\n      console.log(response);\n      this.setState({ newTaskName: \"\" });\n      this.props.toggleAddTaskModal();\n    });\n  }\n\n  updateInputValue_taskName = event => {\n    this.setState({ newTaskName: event.target.value });\n  };\n\n  render() {\n    //Return\n    if (this.state.visible) {\n      return (\n        <div className=\"modal-background-react\">\n          <div className=\"modal-foreground-react animated fadeInDown\">\n            <form onSubmit={this.addTaskToDatabase} className=\"row\">\n              <label>Task Name</label>\n              <input\n                autoFocus\n                type=\"text\"\n                className=\"form-control mb-3\"\n                placeholder=\"Enter a new task\"\n                value={this.state.newTaskName}\n                onChange={this.updateInputValue_taskName}\n              />\n              <div className=\"text-right full-width\">\n                <span\n                  className=\"btn btn-secondary mr-2\"\n                  onClick={this.props.toggleAddTaskModal}\n                >\n                  Cancel\n                </span>\n                <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default AddTaskModal;\n","import React, { Component } from \"react\";\nimport Taskbox from \"./Taskbox.js\";\nimport AddTaskModal from \"./AddTaskModal\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible_AddTaskModal: false\n    };\n    this.toggleAddTaskModal = this.toggleAddTaskModal.bind(this);\n  }\n\n  toggleAddTaskModal() {\n    if (this.state.visible_AddTaskModal) {\n      this.setState({ visible_AddTaskModal: false });\n    } else {\n      this.setState({ visible_AddTaskModal: true });\n    }\n  }\n  render() {\n    return (\n      <main className=\"full-height bg-light\">\n        <nav className=\"navbar navbar-dark bg-primary\">\n          <span className=\"navbar-brand mb-0 h1\">TasksMERN I</span>\n          <div onClick={this.toggleAddTaskModal}>\n            <i className=\"far fa-plus-square text-light fa-2x\"></i>\n          </div>\n        </nav>\n        <AddTaskModal\n          visibility={this.state.visible_AddTaskModal}\n          toggleAddTaskModal={this.toggleAddTaskModal}\n        />\n        <div className=\"p-3 animated fadeInUpBig\">\n          <Taskbox />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./Main.js\";\n\nfunction App() {\n  return (\n    <div className=\"full-height\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}